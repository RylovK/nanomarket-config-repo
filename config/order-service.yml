server:
  port: 8083
spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://postgres:5432/nanomarket_db
    username: root
    password: root
  data:
    jdbc:
      dialect: postgresql
  jpa:
    properties:
      hibernate:
        show_sql: true
    hibernate:
      ddl-auto: validate

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://eureka:8070/eureka

management:
  endpoint:
    env:
      post:
        enabled: true

resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 100
        permittedNumberOfCallsInHalfOpenState: 10
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
      instances:
        checkStockAndReserveProducts:
          baseConfig: default
          failureRateThreshold: 30
          recordExceptions:
            - org.springframework.web.client.HttpServerErrorException
            - java.io.IOException
            - java.util.concurrent.TimeoutException
            - org.springframework.web.client.ResourceAccessException

  bulkhead:
    configs:
      default:
        type: ThreadPool
        maxWaitDuration: 500ms
        maxConcurrentCalls: 25
        queueCapacity: 100
        keepAliveDuration: 20ms
    instances:
      checkStockAndReserveProducts:
        maxWaitDuration: 250ms
        maxConcurrentCalls: 10

  retry:
    configs:
      default:
        maxRetryAttempts: 5
        waitDuration: 5s
        retryExceptions:
          - java.util.concurrent.TimeoutException
          - java.net.SocketTimeoutException



#
#resilience4j.ratelimiter:
#instances:
#  licenseService:
#  timeoutDuration: 1000ms
#  limitRefreshPeriod: 5000
#  limitForPeriod: 5